@inject Microsoft.AspNetCore.Identity.SignInManager<LondonTravelUser> SignInManager
@{
    ViewBag.MetaDescription = "Sign in to your London Travel account.";
    ViewBag.MetaRobots = "NOINDEX";
    ViewBag.Title = "Sign in";
}
<h2>@ViewBag.Title</h2>
@if (string.Equals(ViewData["Message"] as string, nameof(SiteMessage.PermissionDenied), StringComparison.OrdinalIgnoreCase))
{
    <div class="alert alert-warning" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <p class="lead">
            Permission denied
        </p>
        <p>
            You did not grant permission for London Travel to access your email address when you signed in.
        </p>
        <p>
            An email address is required to register.
        </p>
    </div>
}
else if (string.Equals(ViewData["Message"] as string, nameof(SiteMessage.AlreadyRegistered), StringComparison.OrdinalIgnoreCase))
{
    <div class="alert alert-warning" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
        <p class="lead">
            Already registered
        </p>
        <p>
            You have already created a London Travel account by signing in with a
            different service to the one you just tried to sign in with.
        </p>
        <p>
            Sign in with one of the service(s) you've already used to sign-in,
            then you'll be able to link other service(s) to your account
            from the <a asp-route="@SiteRoutes.Manage" class="alert-link">account mangement</a> page.
        </p>
    </div>
}
<div class="row">
    <div class="col-md-4">
        <section>
            <h4>Choose a service to sign in with:</h4>
            <hr />
            <form asp-route="@SiteRoutes.ExternalSignIn" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                <div>
                    <p>
                        @foreach (var provider in SignInManager.GetExternalAuthenticationSchemes().OrderBy((p) => p.DisplayName).ThenBy((p) => p.AuthenticationScheme))
                        {
                            @await Html.PartialAsync("_SocialButton", provider)
                        }
                    </p>
                </div>
            </form>
        </section>
    </div>
    <hr class="hidden-md hidden-lg" />
    <div class="col-md-8">
        <section>
            <h3>...or register a new account</h3>
            <p>
                If you do not already have a London Travel account, register for one <a asp-route="@SiteRoutes.Register" title="Register for a London Travel account">here</a>.
            </p>
            <p>
                <a class="btn btn-primary btn-lg" asp-route="@SiteRoutes.Register" title="Register for a London Travel account">Register <i class="fa fa-user-plus" aria-hidden="true"></i></a>
            </p>
        </section>
    </div>
</div>
@await Html.PartialAsync("_SignInModal")
@section stylesBody {
    @await Html.PartialAsync("_SocialButtonsScripts")
}
