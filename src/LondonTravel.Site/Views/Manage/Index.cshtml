@model ManageViewModel
@using Microsoft.AspNetCore.Http.Authentication
@{
    ViewBag.MetaDescription = "Manage your account details for the London Travel skill.";
    ViewBag.MetaRobots = "NOINDEX";
    ViewBag.Title = "Manage your account";

    IDictionary<string, string> iconMap = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase)
    {
        { "Amazon", "amazon" },
        { "Facebook", "facebook" },
        { "GitHub", "github" },
        { "Google", "google" },
        { "Microsoft", "windows" },
        { "Twitter", "twitter" },
    };
}
<h2>@ViewBag.Title</h2>

<p class="text-success">@ViewData["StatusMessage"]</p>

<div class="row">
    <div class="col-md-8">
        <h4>Registered Accounts</h4>
        <table class="table">
            <tbody>
                @foreach (var provider in Model.CurrentLogins.OrderBy((p) => p.ProviderDisplayName).ThenBy((p) => p.LoginProvider))
                {
                    string iconClass = string.Empty;
                    string modifier;

                    if (iconMap.TryGetValue(provider.LoginProvider, out modifier))
                    {
                        iconClass = $"fa-{modifier}";
                    }

                    <tr>
                        <td><i class="fa @iconClass"></i> @provider.LoginProvider</td>
                        <td>
                            @if (ViewBag.ShowRemoveButton == true)
                            {
                                <form asp-route="RemoveAccount" method="post" class="form-horizontal">
                                    <div>
                                        <input asp-for="@provider.LoginProvider" name="LoginProvider" type="hidden" />
                                        <input asp-for="@provider.ProviderKey" name="ProviderKey" type="hidden" />
                                        <input type="submit" class="btn btn-default" value="Remove" title="Remove link to @provider.LoginProvider from your account" />
                                    </div>
                                </form>
                            }
                            else
                            {
                                @: &nbsp;
                    }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-md-4">
        @if (Model.OtherLogins.Count > 0)
        {
            <h4>Add another external service to sign in.</h4>
            <hr />
            <form asp-route="LinkAccount" method="post" class="form-horizontal">
                <div>
                    <p>
                        @foreach (var provider in Model.OtherLogins.OrderBy((p) => p.DisplayName).ThenBy((p) => p.AuthenticationScheme))
                        {
                            string iconClass = string.Empty;
                            string modifier;

                            if (iconMap.TryGetValue(provider.AuthenticationScheme, out modifier))
                            {
                                iconClass = $"fa-{modifier}";
                            }

                            <button type="submit" class="btn btn-block btn-social btn-@provider.AuthenticationScheme.ToLowerInvariant()" name="provider" value="@provider.AuthenticationScheme" title="Sign in using your @provider.DisplayName account">
                                <i class="fa @iconClass"></i> Sign in using your @provider.DisplayName account
                            </button>
                        }
                    </p>
                </div>
            </form>
        }
    </div>
</div>
@if (Model.OtherLogins.Count > 0)
{
    @section stylesBody {
        <link rel="stylesheet" href="~/lib/bootstrap-social/bootstrap-social.css" asp-append-version="true" async />
    }
}
