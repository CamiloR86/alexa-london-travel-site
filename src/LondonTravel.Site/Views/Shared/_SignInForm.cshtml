@inject Microsoft.AspNetCore.Identity.SignInManager<LondonTravelUser> SignInManager
@{
    var providers = SignInManager.GetExternalAuthenticationSchemes()
        .OrderBy((p) => p.DisplayName)
        .ThenBy((p) => p.AuthenticationScheme)
        .ToList();

    var schemesToHide = ViewData["AuthenticationSchemesToHide"] as IEnumerable<string>;

    if (schemesToHide != null)
    {
        providers = providers
            .Where((p) => !schemesToHide.Contains(p.AuthenticationScheme, StringComparer.OrdinalIgnoreCase))
            .ToList();
    }
}
<form asp-route="@SiteRoutes.ExternalSignIn" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
    <div>
        <p>
            @foreach (var provider in providers)
            {
                @await Html.PartialAsync("_SocialButton", provider)
            }
        </p>
    </div>
</form>
